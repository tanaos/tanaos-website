{"version":3,"file":"static/js/658.a0cf13e0.chunk.js","mappings":"2ZAYO,MAAMA,EAAmDA,KAIrDC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6EACJC,EAAAA,EAAAA,KAAA,OACIC,IAAKC,EACLC,IAAI,yFAERL,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,ibAKqBC,EAAAA,EAAAA,KAAA,KAAGI,KAbO,2DAa8BC,OAAO,SAASC,IAAI,aAAYP,SAAC,4DACxC,+DAGzDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,2DACwDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iEACpC,6OAI1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BACJD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,qCACkCC,EAAAA,EAAAA,KAAA,KAAGI,KAAMG,EAAAA,EAAOC,kBAAmBH,OAAO,QAAQC,IAAI,aAAYP,SAAC,6CAClE,gKAGtCC,EAAAA,EAAAA,KAAA,OACIC,IAAKQ,EACLN,IAAI,4FACJO,UAAU,qBAEdV,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yDACJD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,4IAEsCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BAA2B,0NAIvEC,EAAAA,EAAAA,KAAA,KAAAD,UACIC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uJAKPC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+JAIHC,EAAAA,EAAAA,KAAA,OACIC,IAAKU,EACLR,IAAI,6FACJO,UAAU,qBAEdZ,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,WACQC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0BAAyB,kIACyBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,SAAQ,iBAAaC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oBAC9E,4CAAwCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,OAAO,mHAG/DC,EAAAA,EAAAA,KAAA,OACIC,IAAKW,EACLT,IAAI,4FACJO,UAAU,qBAEdV,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kCACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kJAIHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iCACJD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,uCACoCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBAAuB,oOAEWC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAAqB,wEAGpGC,EAAAA,EAAAA,KAAA,OACIC,IAAKY,EACLV,IAAI,qFACJO,UAAU,qBAEdV,EAAAA,EAAAA,KAAA,OACIC,IAAKa,EACLX,IAAI,qFACJO,UAAU,qBAEdV,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2RAKHC,EAAAA,EAAAA,KAAA,OACIC,IAAKc,EACLZ,IAAI,qFACJO,UAAU,qBAEdV,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yJAIHC,EAAAA,EAAAA,KAAA,OACIC,IAAKe,EACLb,IAAI,qFACJO,UAAU,qBAEdZ,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,uFACoFC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BACzE,qDAEjBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,wQAGqDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,YAAW,wFAGtEC,EAAAA,EAAAA,KAAA,OACIC,IAAKgB,EACLd,IAAI,oGACJO,UAAU,qBAEdV,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0UASX,G","sources":["layouts/BlogArticles/CaseStudyGenerateSyntheticTextClassificationData/index.jsx"],"sourcesContent":["import { Config } from '../../../config';\nimport text_classification_data from '../../../assets/text_classification_data.png';\nimport platform_job_wizard_step1 from './platform_job_wizard_step1.png';\nimport platform_job_wizard_step2 from './platform_job_wizard_step2.png';\nimport platform_job_wizard_step3 from './platform_job_wizard_step3.png';\nimport job_refinement_chat_1a from './job_refinement_chat_1a.png';\nimport job_refinement_chat_1b from './job_refinement_chat_1b.png';\nimport job_refinement_chat_2 from './job_refinement_chat_2.png';\nimport job_refinement_chat_3 from './job_refinement_chat_3.png';\nimport platform_output_dataset from './platform_output_dataset.png';\n\n\nexport const CaseStudyGenerateSyntheticTextClassificationData = () => {\n\n    const financialDatasetCaseStudyLink = 'case-study-generate-synthetic-financial-transaction-data';\n\n    return <div>\n        <h1>Case study: create a text classification dataset for sentiment analysis</h1>\n        <img \n            src={text_classification_data} \n            alt='Generate a synthetic text classification dataset for sentiment analysis with Tanaos' \n        />\n        <p>\n            In this case study, we will take a look at how to create a synthetic text classification dataset to train \n            an AI model (for instance a LLM or another NLP model) for sentiment analysis. Since we have already \n            covered the basics of how the platform works in a previous post, in this case study we will assume you \n            have some familiarity with it. If you are not familiar with the platform, we recommend you read our \n            first case study on <a href={financialDatasetCaseStudyLink} target='_blank' rel='noreferrer'>how to \n            create a synthetic financial transaction dataset</a>, which goes over the basics of how to use the \n            platform.\n        </p>\n        <h3>The objective</h3>\n        <p>\n            The objective of this case study is to create a custom <b>synthetic text classification dataset for \n            sentiment analysis</b>. The dataset will contain text reviews and their corresponding sentiment labels \n            (positive, negative, or neutral). This dataset can then be used to train or fine-tune a machine learning \n            model for sentiment analysis on custom data.\n        </p>\n        <h3>Step 1: Create a new job</h3>\n        <p>\n            We are going to head over to the <a href={Config.PLATFORM_BASE_URL} target='blank' rel='noreferrer'>Dashboard \n            section of the Tanaos platform</a> and open the job creation wizard by clicking on the \"Create job\" button. \n            We will then enter a descriptive title and, optionally, a subtitle for the job.\n        </p>\n        <img \n            src={platform_job_wizard_step1} \n            alt='First step of the synthetic dataset generation job creation wizard on the Tanaos platform'\n            className='img-with-shadow'\n        />\n        <h3>Step 2 and 3: Output data description and structure</h3>\n        <p>\n            Let's move on to the most import part of the job creation process: the output data description and \n            structure definition. Let's keep the <b>output data description</b> straightforward yet sufficiently \n            detailed to ensure the dataset is generated according to our requirements. We want to specify the kind of \n            data that we need, and how it will be used. Let's write something like:\n        </p>\n        <p>\n            <i>\n                \"Generate a text classification dataset for sentiment analysis, which will be used to train a model \n                to recognize the main sentiment of a text\".\n            </i>\n        </p>\n        <p>\n            There is no need to specify any information about the output dataset structure within the output data\n            description, as this will be done in the next step.\n        </p>\n        <img \n            src={platform_job_wizard_step2} \n            alt='Second step of the synthetic dataset generation job creation wizard on the Tanaos platform'\n            className='img-with-shadow'\n        />\n        <p>\n            In the <b>output data structure</b> step we need to specify the columns (or fields) that our dataset \n            will have. In our case, all we really need is two fields: a <i>text</i> field and a <i>sentiment\n            label</i> field. We will also add a third field, <i>id</i>, to uniquely identify each record in the\n            dataset. Let's go ahead and plug that information into the wizard.\n        </p>\n        <img \n            src={platform_job_wizard_step3} \n            alt='Third step of the synthetic dataset generation job creation wizard on the Tanaos platform'\n            className='img-with-shadow'\n        />\n        <h3>Step 4: Number of datapoints</h3>\n        <p>\n            As in the other test cases, we will generate a small dataset to keep the example simple. We will generate\n            1.000 datapoints for this dataset.\n        </p>\n        <h3>Step 5: Job refinement chat</h3>\n        <p>\n            Once the job has been created, the <b>job refinement chat</b> will pop up. We can use this chat to provide\n            the data generation model with additional information that will help it generate the dataset according to\n            our requirements. After each message, the model will respond with a few <b>sample datapoints</b> which \n            reflect its current understanding of the job requirements.\n        </p>\n        <img \n            src={job_refinement_chat_1a}\n            alt='Job refinement chat of the synthetic dataset generation job on the Tanaos platform'\n            className='img-with-shadow'\n        />\n        <img \n            src={job_refinement_chat_1b}\n            alt='Job refinement chat of the synthetic dataset generation job on the Tanaos platform'\n            className='img-with-shadow'\n        />\n        <p>\n            The sample dataset already look quite good! In a real-world scenario, we would probably end the conversation\n            here and let the model generate the dataset. However, for the sake of this example, let's ask the model to\n            slightly modify the dataset to only include positive reviews.\n        </p>\n        <img \n            src={job_refinement_chat_2}\n            alt='Job refinement chat of the synthetic dataset generation job on the Tanaos platform'\n            className='img-with-shadow'\n        />\n        <p>\n            Again, the sample datapoints look just right, but let's go one step further and ask the model to only\n            generate reviews that have to do with movies.\n        </p>\n        <img \n            src={job_refinement_chat_3} \n            alt='Job refinement chat of the synthetic dataset generation job on the Tanaos platform'\n            className='img-with-shadow'\n        />\n        <p>\n            That's perfect. No need to make any further modifications. We can now click on the <b>End chat and \n            start job</b> button to let the model generate the dataset.\n        </p>\n        <h3>The output data</h3>\n        <p>\n            After an amount of time that depends on the number of datapoints you requested (in our case just a few\n            seconds since we only requested 1.000 datapoints), the dataset will be generated and you will be able to\n            download it by clicking on the download icon in the <b>Actions</b> column of the job list. Let's take\n            a look at what the output dataset looks like.\n        </p>\n        <img \n            src={platform_output_dataset}\n            alt='Output dataset of the synthetic text classification dataset generation job on the Tanaos platform'\n            className='img-with-shadow'\n        />\n        <p>\n            The dataset looks great! It contains 1.000 records, each with a unique id, a text review, and a sentiment\n            label. During the job refinement chat, we requested that the output dataset only contain positive movie \n            reviews. As you can see, the model has done a great job at generating the dataset according to our\n            requirements.\n        </p>\n    </div>\n};\n\nexport default CaseStudyGenerateSyntheticTextClassificationData;"],"names":["CaseStudyGenerateSyntheticTextClassificationData","_jsxs","children","_jsx","src","text_classification_data","alt","href","target","rel","Config","PLATFORM_BASE_URL","platform_job_wizard_step1","className","platform_job_wizard_step2","platform_job_wizard_step3","job_refinement_chat_1a","job_refinement_chat_1b","job_refinement_chat_2","job_refinement_chat_3","platform_output_dataset"],"sourceRoot":""}